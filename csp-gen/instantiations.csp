-- generate const_main_Controller_n_waypoints
const_main_Controller_n_waypoints = 0

-- STATEMACHINE CONSTANTS

-- generate string
nametype core_string = LSeq(Char,2)

-- generate get_diff
get_diff(a,b) = 0

-- generate const_main_Controller_ur_n_waypoints
const_main_Controller_ur_n_waypoints = 0

-- STATEMACHINE CONSTANTS

-- generate -- OPERATION BOUNDS

-- MODULE CONSTANTS

-- CONTROLLER CONSTANTS

-- STATEMACHINE CONSTANTS

-- OPERATION CONSTANTS

-- BASIC TYPES

-- VECTOR TYPES AND OPERATIONS


-- CLOCKS

-- generate calc_vel
calc_vel(dist,time) = 0

-- generate const_UpdateVals_n_waypoints
const_UpdateVals_n_waypoints = 0

-- OPERATION CONSTANTS

-- generate const_UpdateVals_ur_n_waypoints
const_UpdateVals_ur_n_waypoints = 0

-- generate const_moveJ_ur_n_waypoints
const_moveJ_ur_n_waypoints = 0

-- BASIC TYPES

-- generate const_main_Controller_stm_ref1_n_waypoints
const_main_Controller_stm_ref1_n_waypoints = 0

-- generate const_main_Controller_stm_ref2_n_waypoints
const_main_Controller_stm_ref2_n_waypoints = 0

-- OPERATION CONSTANTS

-- generate Plus
Plus(e1,e2,T) = if member(e1+e2,T) then e1+e2 else e1

-- generate const_UR_n_waypoints
const_UR_n_waypoints = 0

-- generate --

-- MODULE CONSTANTS

-- CONTROLLER CONSTANTS

-- STATEMACHINE CONSTANTS

-- OPERATION CONSTANTS

-- BASIC TYPES

-- generate nat
nametype core_nat = union({0..2},{calc_type_min(Union(
			{{0},{Plus(curr_waypoint, 1, {0..2})|curr_waypoint <- {0..2}},{0},{Plus(ur_curr_waypoint, 1, {0..2})|ur_curr_waypoint <- {0..2}},{0},{0..2},{10},{0..2},{10},{0..2},{0},{0..2}}))..calc_type_max(Union({{0},{Plus(curr_waypoint, 1, {0..2})|curr_waypoint <- {0..2}},{0},{Plus(ur_curr_waypoint, 1, {0..2})|ur_curr_waypoint <- {0..2}},{0},{0..2},{10},{0..2},{10},{0..2},{0},{0..2}}))})

-- generate const_main_Platform_ur_n_waypoints
const_main_Platform_ur_n_waypoints = 0

-- CONTROLLER CONSTANTS

-- generate go_to_pos_with_velocity_BOUND
go_to_pos_with_velocity_BOUND = 2

-- MODULE CONSTANTS

-- generate core_clock_type
nametype core_clock_type = {0..10}

-- BASIC FUNCTIONS

-- generate const_EXAX_n_waypoints
const_EXAX_n_waypoints = 0

-- generate const_main_Controller_stm_ref1_ur_n_waypoints
const_main_Controller_stm_ref1_ur_n_waypoints = 0

-- OPERATION CONSTANTS

-- generate const_UR_ur_n_waypoints
const_UR_ur_n_waypoints = 0

-- generate real
nametype core_real = union({ -2..2},{calc_type_min(Union(
			{{Minus(goal_angle, curr_angle, { -2..2})|goal_angle <- { -2..2},curr_angle <- { -2..2}},{0},{Plus(curr_waypoint, 1, core_nat)|curr_waypoint <- {0..2}},{Minus(curr_angle1, goal_angle1, { -2..2})|goal_angle1 <- { -2..2},curr_angle1 <- { -2..2}},{Minus(goal_angle2, curr_angle2, { -2..2})|goal_angle2 <- { -2..2},curr_angle2 <- { -2..2}},{0},{Plus(ur_curr_waypoint, 1, core_nat)|ur_curr_waypoint <- {0..2}},{Div(dist, no_zero_div(time_budget), { -2..2})|dist <- { -2..2},time_budget <- { -2..2}},{Div(vel, no_zero_div(dist), { -2..2})|vel <- { -2..2},dist <- { -2..2}},{0},{Div(jd1, no_zero_div(goal_time), { -2..2})|goal_time <- { -2..2},jd1 <- { -2..2}},{Div(jd2, no_zero_div(goal_time), { -2..2})|jd2 <- { -2..2},goal_time <- { -2..2}},{Div(jd1, no_zero_div(jv1), { -2..2})|jv1 <- { -2..2},jd1 <- { -2..2}},{Div(jd2, no_zero_div(jv2), { -2..2})|jd2 <- { -2..2},jv2 <- { -2..2}},{0},{0},{UR_move_curr_angle1(last_UR_move)|last_UR_move <- {(f_curr_angle1,f_goal_angle1,f_curr_angle2,f_goal_angle2,f_goal_time)|f_curr_angle1 <- { -2..2},f_goal_angle1 <- { -2..2},f_curr_angle2 <- { -2..2},f_goal_angle2 <- { -2..2},f_goal_time <- { -2..2}}},{UR_move_curr_angle2(last_UR_move)|last_UR_move <- {(f_curr_angle1,f_goal_angle1,f_curr_angle2,f_goal_angle2,f_goal_time)|f_curr_angle1 <- { -2..2},f_goal_angle1 <- { -2..2},f_curr_angle2 <- { -2..2},f_goal_angle2 <- { -2..2},f_goal_time <- { -2..2}}},{UR_move_goal_angle1(last_UR_move)|last_UR_move <- {(f_curr_angle1,f_goal_angle1,f_curr_angle2,f_goal_angle2,f_goal_time)|f_curr_angle1 <- { -2..2},f_goal_angle1 <- { -2..2},f_curr_angle2 <- { -2..2},f_goal_angle2 <- { -2..2},f_goal_time <- { -2..2}}},{UR_move_goal_angle2(last_UR_move)|last_UR_move <- {(f_curr_angle1,f_goal_angle1,f_curr_angle2,f_goal_angle2,f_goal_time)|f_curr_angle1 <- { -2..2},f_goal_angle1 <- { -2..2},f_curr_angle2 <- { -2..2},f_goal_angle2 <- { -2..2},f_goal_time <- { -2..2}}},{UR_move_goal_time(last_UR_move)|last_UR_move <- {(f_curr_angle1,f_goal_angle1,f_curr_angle2,f_goal_angle2,f_goal_time)|f_curr_angle1 <- { -2..2},f_goal_angle1 <- { -2..2},f_curr_angle2 <- { -2..2},f_goal_angle2 <- { -2..2},f_goal_time <- { -2..2}}},{EXAX_move_curr_angle(last_EXAX_move)|last_EXAX_move <- {(f_curr_angle,f_goal_angle,f_goal_time)|f_curr_angle <- { -2..2},f_goal_angle <- { -2..2},f_goal_time <- { -2..2}}},{EXAX_move_goal_angle(last_EXAX_move)|last_EXAX_move <- {(f_curr_angle,f_goal_angle,f_goal_time)|f_curr_angle <- { -2..2},f_goal_angle <- { -2..2},f_goal_time <- { -2..2}}},{EXAX_move_goal_time(last_EXAX_move)|last_EXAX_move <- {(f_curr_angle,f_goal_angle,f_goal_time)|f_curr_angle <- { -2..2},f_goal_angle <- { -2..2},f_goal_time <- { -2..2}}},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{0},{0..2},{10},{0..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{10},{0..2},{0},{0..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{goal_time|goal_time <- { -2..2}},{time_budget|time_budget <- { -2..2}},{jd2|jd2 <- { -2..2}},{dist|dist <- { -2..2}},{jd1|jd1 <- { -2..2}}}))..calc_type_max(Union({{Minus(goal_angle, curr_angle, { -2..2})|goal_angle <- { -2..2},curr_angle <- { -2..2}},{0},{Plus(curr_waypoint, 1, core_nat)|curr_waypoint <- {0..2}},{Minus(curr_angle1, goal_angle1, { -2..2})|goal_angle1 <- { -2..2},curr_angle1 <- { -2..2}},{Minus(goal_angle2, curr_angle2, { -2..2})|goal_angle2 <- { -2..2},curr_angle2 <- { -2..2}},{0},{Plus(ur_curr_waypoint, 1, core_nat)|ur_curr_waypoint <- {0..2}},{Div(dist, no_zero_div(time_budget), { -2..2})|dist <- { -2..2},time_budget <- { -2..2}},{Div(vel, no_zero_div(dist), { -2..2})|vel <- { -2..2},dist <- { -2..2}},{0},{Div(jd1, no_zero_div(goal_time), { -2..2})|goal_time <- { -2..2},jd1 <- { -2..2}},{Div(jd2, no_zero_div(goal_time), { -2..2})|jd2 <- { -2..2},goal_time <- { -2..2}},{Div(jd1, no_zero_div(jv1), { -2..2})|jv1 <- { -2..2},jd1 <- { -2..2}},{Div(jd2, no_zero_div(jv2), { -2..2})|jd2 <- { -2..2},jv2 <- { -2..2}},{0},{0},{UR_move_curr_angle1(last_UR_move)|last_UR_move <- {(f_curr_angle1,f_goal_angle1,f_curr_angle2,f_goal_angle2,f_goal_time)|f_curr_angle1 <- { -2..2},f_goal_angle1 <- { -2..2},f_curr_angle2 <- { -2..2},f_goal_angle2 <- { -2..2},f_goal_time <- { -2..2}}},{UR_move_curr_angle2(last_UR_move)|last_UR_move <- {(f_curr_angle1,f_goal_angle1,f_curr_angle2,f_goal_angle2,f_goal_time)|f_curr_angle1 <- { -2..2},f_goal_angle1 <- { -2..2},f_curr_angle2 <- { -2..2},f_goal_angle2 <- { -2..2},f_goal_time <- { -2..2}}},{UR_move_goal_angle1(last_UR_move)|last_UR_move <- {(f_curr_angle1,f_goal_angle1,f_curr_angle2,f_goal_angle2,f_goal_time)|f_curr_angle1 <- { -2..2},f_goal_angle1 <- { -2..2},f_curr_angle2 <- { -2..2},f_goal_angle2 <- { -2..2},f_goal_time <- { -2..2}}},{UR_move_goal_angle2(last_UR_move)|last_UR_move <- {(f_curr_angle1,f_goal_angle1,f_curr_angle2,f_goal_angle2,f_goal_time)|f_curr_angle1 <- { -2..2},f_goal_angle1 <- { -2..2},f_curr_angle2 <- { -2..2},f_goal_angle2 <- { -2..2},f_goal_time <- { -2..2}}},{UR_move_goal_time(last_UR_move)|last_UR_move <- {(f_curr_angle1,f_goal_angle1,f_curr_angle2,f_goal_angle2,f_goal_time)|f_curr_angle1 <- { -2..2},f_goal_angle1 <- { -2..2},f_curr_angle2 <- { -2..2},f_goal_angle2 <- { -2..2},f_goal_time <- { -2..2}}},{EXAX_move_curr_angle(last_EXAX_move)|last_EXAX_move <- {(f_curr_angle,f_goal_angle,f_goal_time)|f_curr_angle <- { -2..2},f_goal_angle <- { -2..2},f_goal_time <- { -2..2}}},{EXAX_move_goal_angle(last_EXAX_move)|last_EXAX_move <- {(f_curr_angle,f_goal_angle,f_goal_time)|f_curr_angle <- { -2..2},f_goal_angle <- { -2..2},f_goal_time <- { -2..2}}},{EXAX_move_goal_time(last_EXAX_move)|last_EXAX_move <- {(f_curr_angle,f_goal_angle,f_goal_time)|f_curr_angle <- { -2..2},f_goal_angle <- { -2..2},f_goal_time <- { -2..2}}},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{0},{0..2},{10},{0..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{10},{0..2},{0},{0..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{ -2..2},{goal_time|goal_time <- { -2..2}},{time_budget|time_budget <- { -2..2}},{jd2|jd2 <- { -2..2}},{dist|dist <- { -2..2}},{jd1|jd1 <- { -2..2}}}))}) 

-- VECTOR TYPES AND OPERATIONS


-- CLOCKS

-- generate go_to_velocity_BOUND
go_to_velocity_BOUND = 2

-- generate int
nametype core_int = union({ -2..2},{calc_type_min(Union(
			{{0},{Plus(curr_waypoint, 1, core_nat)|curr_waypoint <- {0..2}},{0},{Plus(ur_curr_waypoint, 1, core_nat)|ur_curr_waypoint <- {0..2}},{0},{0..2},{10},{0..2},{10},{0..2},{0},{0..2}}))..calc_type_max(Union({{0},{Plus(curr_waypoint, 1, core_nat)|curr_waypoint <- {0..2}},{0},{Plus(ur_curr_waypoint, 1, core_nat)|ur_curr_waypoint <- {0..2}},{0},{0..2},{10},{0..2},{10},{0..2},{0},{0..2}}))})

-- generate Div
Div(e1,e2,T) = if member(e1/e2,T) then e1/e2 else e1

-- generate Neg
Neg(e1,T) = if member(-e1,T) then -e1 else e1

-- generate const_main_Platform_n_waypoints
const_main_Platform_n_waypoints = 0

-- CONTROLLER CONSTANTS

-- generate moveJ_BOUND
moveJ_BOUND = 2

-- MODULE CONSTANTS

-- generate boolean
nametype core_boolean = Bool

-- generate const_go_to_pos_with_velocity_n_waypoints
const_go_to_pos_with_velocity_n_waypoints = 0

-- generate Mult
Mult(e1,e2,T) = if member(e1*e2,T) then e1*e2 else e1

-- generate Modulus
Modulus(e1,e2,T) = if member(e1%e2,T) then e1%e2 else e1

-- generate const_go_to_velocity_n_waypoints
const_go_to_velocity_n_waypoints = 0

-- BASIC TYPES

-- generate calc_time
calc_time(dist,vel) = 0

-- generate Minus
Minus(e1,e2,T) = if member(e1-e2,T) then e1-e2 else e1

-- generate update_pos
update_pos(curr_pos,goal_time) = 0

