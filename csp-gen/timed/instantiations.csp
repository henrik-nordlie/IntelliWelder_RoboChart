-- generate check_big_dist not
check_big_dist(jd1,jd2) =
  let
    jd1L = abs(jd1)
    jd2L = abs(jd2)
  within
    jd1L == 1 or jd2L == 1

-- generate nat not
nametype core_nat = {0..3}

-- generate abs not
abs(num) = if (num >= 0) then num else -num

-- generate real not
nametype core_real = { -1..1}

-- generate int not
nametype core_int = { 0..2}

-- VECTOR TYPES AND OPERATIONS


-- CLOCKS

-- generate const_main_Controller_n_waypoints
const_main_Controller_n_waypoints = 0

-- STATEMACHINE CONSTANTS

-- generate string
nametype core_string = LSeq(Char,2)

-- generate get_diff
get_diff(a,b) = 0

-- generate const_main_Controller_ur_n_waypoints
const_main_Controller_ur_n_waypoints = 0

-- STATEMACHINE CONSTANTS

-- generate -- OPERATION BOUNDS

-- MODULE CONSTANTS

-- CONTROLLER CONSTANTS

-- STATEMACHINE CONSTANTS

-- OPERATION CONSTANTS

-- BASIC TYPES

-- VECTOR TYPES AND OPERATIONS


-- CLOCKS

-- generate calc_vel
calc_vel(dist,time) = 0

-- generate const_UpdateVals_n_waypoints
const_UpdateVals_n_waypoints = 0

-- OPERATION CONSTANTS

-- generate const_UpdateVals_ur_n_waypoints
const_UpdateVals_ur_n_waypoints = 0

-- generate const_moveJ_ur_n_waypoints
const_moveJ_ur_n_waypoints = 0

-- BASIC TYPES

-- generate const_main_Controller_stm_ref1_n_waypoints
const_main_Controller_stm_ref1_n_waypoints = 0

-- generate const_main_Controller_stm_ref2_n_waypoints
const_main_Controller_stm_ref2_n_waypoints = 0

-- OPERATION CONSTANTS

-- generate Plus
Plus(e1,e2,T) = if member(e1+e2,T) then e1+e2 else e1

-- generate const_UR_n_waypoints
const_UR_n_waypoints = 0

-- generate --

-- MODULE CONSTANTS

-- CONTROLLER CONSTANTS

-- STATEMACHINE CONSTANTS

-- OPERATION CONSTANTS

-- BASIC TYPES

-- generate const_main_Platform_ur_n_waypoints
const_main_Platform_ur_n_waypoints = 0

-- CONTROLLER CONSTANTS

-- generate go_to_pos_with_velocity_BOUND
go_to_pos_with_velocity_BOUND = 2

-- MODULE CONSTANTS

-- generate core_clock_type
nametype core_clock_type = {0..10}

-- BASIC FUNCTIONS

-- generate const_EXAX_n_waypoints
const_EXAX_n_waypoints = 0

-- generate const_main_Controller_stm_ref1_ur_n_waypoints
const_main_Controller_stm_ref1_ur_n_waypoints = 0

-- OPERATION CONSTANTS

-- generate const_UR_ur_n_waypoints
const_UR_ur_n_waypoints = 0

-- generate go_to_velocity_BOUND
go_to_velocity_BOUND = 2

-- generate Div
Div(e1,e2,T) = if member(e1/e2,T) then e1/e2 else e1

-- generate Neg
Neg(e1,T) = if member(-e1,T) then -e1 else e1

-- generate const_main_Platform_n_waypoints
const_main_Platform_n_waypoints = 0

-- CONTROLLER CONSTANTS

-- generate moveJ_BOUND
moveJ_BOUND = 2

-- MODULE CONSTANTS

-- generate boolean
nametype core_boolean = Bool

-- generate const_go_to_pos_with_velocity_n_waypoints
const_go_to_pos_with_velocity_n_waypoints = 0

-- generate Mult
Mult(e1,e2,T) = if member(e1*e2,T) then e1*e2 else e1

-- generate Modulus
Modulus(e1,e2,T) = if member(e1%e2,T) then e1%e2 else e1

-- generate const_go_to_velocity_n_waypoints
const_go_to_velocity_n_waypoints = 0

-- BASIC TYPES

-- generate calc_time
calc_time(dist,vel) = 0

-- generate Minus
Minus(e1,e2,T) = if member(e1-e2,T) then e1-e2 else e1

-- generate update_pos
update_pos(curr_pos,goal_time) = 0

